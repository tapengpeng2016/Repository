#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MEDIATHEQUES")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Définitions de méthodes d'extensibilité
  partial void OnCreated();
  partial void InsertAbonnement(Abonnement instance);
  partial void UpdateAbonnement(Abonnement instance);
  partial void DeleteAbonnement(Abonnement instance);
  partial void InsertArticle(Article instance);
  partial void UpdateArticle(Article instance);
  partial void DeleteArticle(Article instance);
  partial void InsertEmprunt(Emprunt instance);
  partial void UpdateEmprunt(Emprunt instance);
  partial void DeleteEmprunt(Emprunt instance);
  partial void InsertExemplaire(Exemplaire instance);
  partial void UpdateExemplaire(Exemplaire instance);
  partial void DeleteExemplaire(Exemplaire instance);
  partial void InsertFormat(Format instance);
  partial void UpdateFormat(Format instance);
  partial void DeleteFormat(Format instance);
  partial void InsertGenre(Genre instance);
  partial void UpdateGenre(Genre instance);
  partial void DeleteGenre(Genre instance);
  partial void InsertReservation(Reservation instance);
  partial void UpdateReservation(Reservation instance);
  partial void DeleteReservation(Reservation instance);
  partial void InsertTarif(Tarif instance);
  partial void UpdateTarif(Tarif instance);
  partial void DeleteTarif(Tarif instance);
  partial void InsertUsager(Usager instance);
  partial void UpdateUsager(Usager instance);
  partial void DeleteUsager(Usager instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MEDIATHEQUEConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Abonnement> Abonnement
	{
		get
		{
			return this.GetTable<Abonnement>();
		}
	}
	
	public System.Data.Linq.Table<Article> Article
	{
		get
		{
			return this.GetTable<Article>();
		}
	}
	
	public System.Data.Linq.Table<Emprunt> Emprunt
	{
		get
		{
			return this.GetTable<Emprunt>();
		}
	}
	
	public System.Data.Linq.Table<Exemplaire> Exemplaire
	{
		get
		{
			return this.GetTable<Exemplaire>();
		}
	}
	
	public System.Data.Linq.Table<Format> Format
	{
		get
		{
			return this.GetTable<Format>();
		}
	}
	
	public System.Data.Linq.Table<Genre> Genre
	{
		get
		{
			return this.GetTable<Genre>();
		}
	}
	
	public System.Data.Linq.Table<Reservation> Reservation
	{
		get
		{
			return this.GetTable<Reservation>();
		}
	}
	
	public System.Data.Linq.Table<Tarif> Tarif
	{
		get
		{
			return this.GetTable<Tarif>();
		}
	}
	
	public System.Data.Linq.Table<Usager> Usager
	{
		get
		{
			return this.GetTable<Usager>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Abonnement")]
public partial class Abonnement : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idAbonnement;
	
	private int _idUsager;
	
	private int _idTarif;
	
	private System.DateTime _dateAbonnement;
	
	private EntityRef<Tarif> _Tarif;
	
	private EntityRef<Usager> _Usager;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAbonnementChanging(int value);
    partial void OnidAbonnementChanged();
    partial void OnidUsagerChanging(int value);
    partial void OnidUsagerChanged();
    partial void OnidTarifChanging(int value);
    partial void OnidTarifChanged();
    partial void OndateAbonnementChanging(System.DateTime value);
    partial void OndateAbonnementChanged();
    #endregion
	
	public Abonnement()
	{
		this._Tarif = default(EntityRef<Tarif>);
		this._Usager = default(EntityRef<Usager>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAbonnement", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idAbonnement
	{
		get
		{
			return this._idAbonnement;
		}
		set
		{
			if ((this._idAbonnement != value))
			{
				this.OnidAbonnementChanging(value);
				this.SendPropertyChanging();
				this._idAbonnement = value;
				this.SendPropertyChanged("idAbonnement");
				this.OnidAbonnementChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsager", DbType="Int NOT NULL")]
	public int idUsager
	{
		get
		{
			return this._idUsager;
		}
		set
		{
			if ((this._idUsager != value))
			{
				if (this._Usager.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidUsagerChanging(value);
				this.SendPropertyChanging();
				this._idUsager = value;
				this.SendPropertyChanged("idUsager");
				this.OnidUsagerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTarif", DbType="Int NOT NULL")]
	public int idTarif
	{
		get
		{
			return this._idTarif;
		}
		set
		{
			if ((this._idTarif != value))
			{
				if (this._Tarif.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidTarifChanging(value);
				this.SendPropertyChanging();
				this._idTarif = value;
				this.SendPropertyChanged("idTarif");
				this.OnidTarifChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAbonnement", DbType="Date NOT NULL")]
	public System.DateTime dateAbonnement
	{
		get
		{
			return this._dateAbonnement;
		}
		set
		{
			if ((this._dateAbonnement != value))
			{
				this.OndateAbonnementChanging(value);
				this.SendPropertyChanging();
				this._dateAbonnement = value;
				this.SendPropertyChanged("dateAbonnement");
				this.OndateAbonnementChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Abonnement", Storage="_Tarif", ThisKey="idTarif", OtherKey="idTarif", IsForeignKey=true)]
	public Tarif Tarif
	{
		get
		{
			return this._Tarif.Entity;
		}
		set
		{
			Tarif previousValue = this._Tarif.Entity;
			if (((previousValue != value) 
						|| (this._Tarif.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Tarif.Entity = null;
					previousValue.Abonnement.Remove(this);
				}
				this._Tarif.Entity = value;
				if ((value != null))
				{
					value.Abonnement.Add(this);
					this._idTarif = value.idTarif;
				}
				else
				{
					this._idTarif = default(int);
				}
				this.SendPropertyChanged("Tarif");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Abonnement", Storage="_Usager", ThisKey="idUsager", OtherKey="idUsager", IsForeignKey=true)]
	public Usager Usager
	{
		get
		{
			return this._Usager.Entity;
		}
		set
		{
			Usager previousValue = this._Usager.Entity;
			if (((previousValue != value) 
						|| (this._Usager.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Usager.Entity = null;
					previousValue.Abonnement.Remove(this);
				}
				this._Usager.Entity = value;
				if ((value != null))
				{
					value.Abonnement.Add(this);
					this._idUsager = value.idUsager;
				}
				else
				{
					this._idUsager = default(int);
				}
				this.SendPropertyChanged("Usager");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idArticle;
	
	private string _nom;
	
	private int _idFormat;
	
	private int _idGenre;
	
	private string _acteurs;
	
	private EntitySet<Exemplaire> _Exemplaire;
	
	private EntityRef<Format> _Format;
	
	private EntityRef<Genre> _Genre;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidArticleChanging(int value);
    partial void OnidArticleChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnidFormatChanging(int value);
    partial void OnidFormatChanged();
    partial void OnidGenreChanging(int value);
    partial void OnidGenreChanged();
    partial void OnacteursChanging(string value);
    partial void OnacteursChanged();
    #endregion
	
	public Article()
	{
		this._Exemplaire = new EntitySet<Exemplaire>(new Action<Exemplaire>(this.attach_Exemplaire), new Action<Exemplaire>(this.detach_Exemplaire));
		this._Format = default(EntityRef<Format>);
		this._Genre = default(EntityRef<Genre>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArticle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idArticle
	{
		get
		{
			return this._idArticle;
		}
		set
		{
			if ((this._idArticle != value))
			{
				this.OnidArticleChanging(value);
				this.SendPropertyChanging();
				this._idArticle = value;
				this.SendPropertyChanged("idArticle");
				this.OnidArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
	public string nom
	{
		get
		{
			return this._nom;
		}
		set
		{
			if ((this._nom != value))
			{
				this.OnnomChanging(value);
				this.SendPropertyChanging();
				this._nom = value;
				this.SendPropertyChanged("nom");
				this.OnnomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFormat", DbType="Int NOT NULL")]
	public int idFormat
	{
		get
		{
			return this._idFormat;
		}
		set
		{
			if ((this._idFormat != value))
			{
				if (this._Format.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidFormatChanging(value);
				this.SendPropertyChanging();
				this._idFormat = value;
				this.SendPropertyChanged("idFormat");
				this.OnidFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGenre", DbType="Int NOT NULL")]
	public int idGenre
	{
		get
		{
			return this._idGenre;
		}
		set
		{
			if ((this._idGenre != value))
			{
				if (this._Genre.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidGenreChanging(value);
				this.SendPropertyChanging();
				this._idGenre = value;
				this.SendPropertyChanged("idGenre");
				this.OnidGenreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acteurs", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string acteurs
	{
		get
		{
			return this._acteurs;
		}
		set
		{
			if ((this._acteurs != value))
			{
				this.OnacteursChanging(value);
				this.SendPropertyChanging();
				this._acteurs = value;
				this.SendPropertyChanged("acteurs");
				this.OnacteursChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Exemplaire", Storage="_Exemplaire", ThisKey="idArticle", OtherKey="idArticle")]
	public EntitySet<Exemplaire> Exemplaire
	{
		get
		{
			return this._Exemplaire;
		}
		set
		{
			this._Exemplaire.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Format_Article", Storage="_Format", ThisKey="idFormat", OtherKey="idFormat", IsForeignKey=true)]
	public Format Format
	{
		get
		{
			return this._Format.Entity;
		}
		set
		{
			Format previousValue = this._Format.Entity;
			if (((previousValue != value) 
						|| (this._Format.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Format.Entity = null;
					previousValue.Article.Remove(this);
				}
				this._Format.Entity = value;
				if ((value != null))
				{
					value.Article.Add(this);
					this._idFormat = value.idFormat;
				}
				else
				{
					this._idFormat = default(int);
				}
				this.SendPropertyChanged("Format");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Article", Storage="_Genre", ThisKey="idGenre", OtherKey="idGenre", IsForeignKey=true)]
	public Genre Genre
	{
		get
		{
			return this._Genre.Entity;
		}
		set
		{
			Genre previousValue = this._Genre.Entity;
			if (((previousValue != value) 
						|| (this._Genre.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Genre.Entity = null;
					previousValue.Article.Remove(this);
				}
				this._Genre.Entity = value;
				if ((value != null))
				{
					value.Article.Add(this);
					this._idGenre = value.idGenre;
				}
				else
				{
					this._idGenre = default(int);
				}
				this.SendPropertyChanged("Genre");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Exemplaire(Exemplaire entity)
	{
		this.SendPropertyChanging();
		entity.Article = this;
	}
	
	private void detach_Exemplaire(Exemplaire entity)
	{
		this.SendPropertyChanging();
		entity.Article = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emprunt")]
public partial class Emprunt : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idEmprunt;
	
	private int _idUsager;
	
	private int _idExemplaire;
	
	private System.DateTime _dateEmprunt;
	
	private System.Nullable<System.DateTime> _dateRetourEstimee;
	
	private System.DateTime _dateRetourReelle;
	
	private EntityRef<Exemplaire> _Exemplaire;
	
	private EntityRef<Usager> _Usager;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpruntChanging(int value);
    partial void OnidEmpruntChanged();
    partial void OnidUsagerChanging(int value);
    partial void OnidUsagerChanged();
    partial void OnidExemplaireChanging(int value);
    partial void OnidExemplaireChanged();
    partial void OndateEmpruntChanging(System.DateTime value);
    partial void OndateEmpruntChanged();
    partial void OndateRetourEstimeeChanging(System.Nullable<System.DateTime> value);
    partial void OndateRetourEstimeeChanged();
    partial void OndateRetourReelleChanging(System.DateTime value);
    partial void OndateRetourReelleChanged();
    #endregion
	
	public Emprunt()
	{
		this._Exemplaire = default(EntityRef<Exemplaire>);
		this._Usager = default(EntityRef<Usager>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmprunt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idEmprunt
	{
		get
		{
			return this._idEmprunt;
		}
		set
		{
			if ((this._idEmprunt != value))
			{
				this.OnidEmpruntChanging(value);
				this.SendPropertyChanging();
				this._idEmprunt = value;
				this.SendPropertyChanged("idEmprunt");
				this.OnidEmpruntChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsager", DbType="Int NOT NULL")]
	public int idUsager
	{
		get
		{
			return this._idUsager;
		}
		set
		{
			if ((this._idUsager != value))
			{
				if (this._Usager.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidUsagerChanging(value);
				this.SendPropertyChanging();
				this._idUsager = value;
				this.SendPropertyChanged("idUsager");
				this.OnidUsagerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExemplaire", DbType="Int NOT NULL")]
	public int idExemplaire
	{
		get
		{
			return this._idExemplaire;
		}
		set
		{
			if ((this._idExemplaire != value))
			{
				if (this._Exemplaire.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidExemplaireChanging(value);
				this.SendPropertyChanging();
				this._idExemplaire = value;
				this.SendPropertyChanged("idExemplaire");
				this.OnidExemplaireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEmprunt", DbType="Date NOT NULL")]
	public System.DateTime dateEmprunt
	{
		get
		{
			return this._dateEmprunt;
		}
		set
		{
			if ((this._dateEmprunt != value))
			{
				this.OndateEmpruntChanging(value);
				this.SendPropertyChanging();
				this._dateEmprunt = value;
				this.SendPropertyChanged("dateEmprunt");
				this.OndateEmpruntChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRetourEstimee", DbType="Date")]
	public System.Nullable<System.DateTime> dateRetourEstimee
	{
		get
		{
			return this._dateRetourEstimee;
		}
		set
		{
			if ((this._dateRetourEstimee != value))
			{
				this.OndateRetourEstimeeChanging(value);
				this.SendPropertyChanging();
				this._dateRetourEstimee = value;
				this.SendPropertyChanged("dateRetourEstimee");
				this.OndateRetourEstimeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRetourReelle", DbType="Date NOT NULL")]
	public System.DateTime dateRetourReelle
	{
		get
		{
			return this._dateRetourReelle;
		}
		set
		{
			if ((this._dateRetourReelle != value))
			{
				this.OndateRetourReelleChanging(value);
				this.SendPropertyChanging();
				this._dateRetourReelle = value;
				this.SendPropertyChanged("dateRetourReelle");
				this.OndateRetourReelleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exemplaire_Emprunt", Storage="_Exemplaire", ThisKey="idExemplaire", OtherKey="idExemplaire", IsForeignKey=true)]
	public Exemplaire Exemplaire
	{
		get
		{
			return this._Exemplaire.Entity;
		}
		set
		{
			Exemplaire previousValue = this._Exemplaire.Entity;
			if (((previousValue != value) 
						|| (this._Exemplaire.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Exemplaire.Entity = null;
					previousValue.Emprunt.Remove(this);
				}
				this._Exemplaire.Entity = value;
				if ((value != null))
				{
					value.Emprunt.Add(this);
					this._idExemplaire = value.idExemplaire;
				}
				else
				{
					this._idExemplaire = default(int);
				}
				this.SendPropertyChanged("Exemplaire");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Emprunt", Storage="_Usager", ThisKey="idUsager", OtherKey="idUsager", IsForeignKey=true)]
	public Usager Usager
	{
		get
		{
			return this._Usager.Entity;
		}
		set
		{
			Usager previousValue = this._Usager.Entity;
			if (((previousValue != value) 
						|| (this._Usager.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Usager.Entity = null;
					previousValue.Emprunt.Remove(this);
				}
				this._Usager.Entity = value;
				if ((value != null))
				{
					value.Emprunt.Add(this);
					this._idUsager = value.idUsager;
				}
				else
				{
					this._idUsager = default(int);
				}
				this.SendPropertyChanged("Usager");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Exemplaire")]
public partial class Exemplaire : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idExemplaire;
	
	private int _numero;
	
	private int _idArticle;
	
	private string _etat;
	
	private EntitySet<Emprunt> _Emprunt;
	
	private EntitySet<Reservation> _Reservation;
	
	private EntityRef<Article> _Article;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidExemplaireChanging(int value);
    partial void OnidExemplaireChanged();
    partial void OnnumeroChanging(int value);
    partial void OnnumeroChanged();
    partial void OnidArticleChanging(int value);
    partial void OnidArticleChanged();
    partial void OnetatChanging(string value);
    partial void OnetatChanged();
    #endregion
	
	public Exemplaire()
	{
		this._Emprunt = new EntitySet<Emprunt>(new Action<Emprunt>(this.attach_Emprunt), new Action<Emprunt>(this.detach_Emprunt));
		this._Reservation = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservation), new Action<Reservation>(this.detach_Reservation));
		this._Article = default(EntityRef<Article>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExemplaire", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idExemplaire
	{
		get
		{
			return this._idExemplaire;
		}
		set
		{
			if ((this._idExemplaire != value))
			{
				this.OnidExemplaireChanging(value);
				this.SendPropertyChanging();
				this._idExemplaire = value;
				this.SendPropertyChanged("idExemplaire");
				this.OnidExemplaireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero", DbType="Int NOT NULL")]
	public int numero
	{
		get
		{
			return this._numero;
		}
		set
		{
			if ((this._numero != value))
			{
				this.OnnumeroChanging(value);
				this.SendPropertyChanging();
				this._numero = value;
				this.SendPropertyChanged("numero");
				this.OnnumeroChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idArticle", DbType="Int NOT NULL")]
	public int idArticle
	{
		get
		{
			return this._idArticle;
		}
		set
		{
			if ((this._idArticle != value))
			{
				if (this._Article.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidArticleChanging(value);
				this.SendPropertyChanging();
				this._idArticle = value;
				this.SendPropertyChanged("idArticle");
				this.OnidArticleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_etat", DbType="NChar(150)")]
	public string etat
	{
		get
		{
			return this._etat;
		}
		set
		{
			if ((this._etat != value))
			{
				this.OnetatChanging(value);
				this.SendPropertyChanging();
				this._etat = value;
				this.SendPropertyChanged("etat");
				this.OnetatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exemplaire_Emprunt", Storage="_Emprunt", ThisKey="idExemplaire", OtherKey="idExemplaire")]
	public EntitySet<Emprunt> Emprunt
	{
		get
		{
			return this._Emprunt;
		}
		set
		{
			this._Emprunt.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exemplaire_Reservation", Storage="_Reservation", ThisKey="idExemplaire", OtherKey="idExemplaire")]
	public EntitySet<Reservation> Reservation
	{
		get
		{
			return this._Reservation;
		}
		set
		{
			this._Reservation.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Exemplaire", Storage="_Article", ThisKey="idArticle", OtherKey="idArticle", IsForeignKey=true)]
	public Article Article
	{
		get
		{
			return this._Article.Entity;
		}
		set
		{
			Article previousValue = this._Article.Entity;
			if (((previousValue != value) 
						|| (this._Article.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Article.Entity = null;
					previousValue.Exemplaire.Remove(this);
				}
				this._Article.Entity = value;
				if ((value != null))
				{
					value.Exemplaire.Add(this);
					this._idArticle = value.idArticle;
				}
				else
				{
					this._idArticle = default(int);
				}
				this.SendPropertyChanged("Article");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Emprunt(Emprunt entity)
	{
		this.SendPropertyChanging();
		entity.Exemplaire = this;
	}
	
	private void detach_Emprunt(Emprunt entity)
	{
		this.SendPropertyChanging();
		entity.Exemplaire = null;
	}
	
	private void attach_Reservation(Reservation entity)
	{
		this.SendPropertyChanging();
		entity.Exemplaire = this;
	}
	
	private void detach_Reservation(Reservation entity)
	{
		this.SendPropertyChanging();
		entity.Exemplaire = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Format")]
public partial class Format : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idFormat;
	
	private string _libelle;
	
	private EntitySet<Article> _Article;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFormatChanging(int value);
    partial void OnidFormatChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
	
	public Format()
	{
		this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFormat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idFormat
	{
		get
		{
			return this._idFormat;
		}
		set
		{
			if ((this._idFormat != value))
			{
				this.OnidFormatChanging(value);
				this.SendPropertyChanging();
				this._idFormat = value;
				this.SendPropertyChanged("idFormat");
				this.OnidFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="NVarChar(150)")]
	public string libelle
	{
		get
		{
			return this._libelle;
		}
		set
		{
			if ((this._libelle != value))
			{
				this.OnlibelleChanging(value);
				this.SendPropertyChanging();
				this._libelle = value;
				this.SendPropertyChanged("libelle");
				this.OnlibelleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Format_Article", Storage="_Article", ThisKey="idFormat", OtherKey="idFormat")]
	public EntitySet<Article> Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			this._Article.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Format = this;
	}
	
	private void detach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Format = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genre")]
public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idGenre;
	
	private string _libelle;
	
	private EntitySet<Article> _Article;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGenreChanging(int value);
    partial void OnidGenreChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    #endregion
	
	public Genre()
	{
		this._Article = new EntitySet<Article>(new Action<Article>(this.attach_Article), new Action<Article>(this.detach_Article));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGenre", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idGenre
	{
		get
		{
			return this._idGenre;
		}
		set
		{
			if ((this._idGenre != value))
			{
				this.OnidGenreChanging(value);
				this.SendPropertyChanging();
				this._idGenre = value;
				this.SendPropertyChanged("idGenre");
				this.OnidGenreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string libelle
	{
		get
		{
			return this._libelle;
		}
		set
		{
			if ((this._libelle != value))
			{
				this.OnlibelleChanging(value);
				this.SendPropertyChanging();
				this._libelle = value;
				this.SendPropertyChanged("libelle");
				this.OnlibelleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Article", Storage="_Article", ThisKey="idGenre", OtherKey="idGenre")]
	public EntitySet<Article> Article
	{
		get
		{
			return this._Article;
		}
		set
		{
			this._Article.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Genre = this;
	}
	
	private void detach_Article(Article entity)
	{
		this.SendPropertyChanging();
		entity.Genre = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reservation")]
public partial class Reservation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idReservation;
	
	private int _idUsager;
	
	private int _idExemplaire;
	
	private System.DateTime _dateReservation;
	
	private EntityRef<Exemplaire> _Exemplaire;
	
	private EntityRef<Usager> _Usager;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidReservationChanging(int value);
    partial void OnidReservationChanged();
    partial void OnidUsagerChanging(int value);
    partial void OnidUsagerChanged();
    partial void OnidExemplaireChanging(int value);
    partial void OnidExemplaireChanged();
    partial void OndateReservationChanging(System.DateTime value);
    partial void OndateReservationChanged();
    #endregion
	
	public Reservation()
	{
		this._Exemplaire = default(EntityRef<Exemplaire>);
		this._Usager = default(EntityRef<Usager>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReservation", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idReservation
	{
		get
		{
			return this._idReservation;
		}
		set
		{
			if ((this._idReservation != value))
			{
				this.OnidReservationChanging(value);
				this.SendPropertyChanging();
				this._idReservation = value;
				this.SendPropertyChanged("idReservation");
				this.OnidReservationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsager", DbType="Int NOT NULL")]
	public int idUsager
	{
		get
		{
			return this._idUsager;
		}
		set
		{
			if ((this._idUsager != value))
			{
				if (this._Usager.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidUsagerChanging(value);
				this.SendPropertyChanging();
				this._idUsager = value;
				this.SendPropertyChanged("idUsager");
				this.OnidUsagerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExemplaire", DbType="Int NOT NULL")]
	public int idExemplaire
	{
		get
		{
			return this._idExemplaire;
		}
		set
		{
			if ((this._idExemplaire != value))
			{
				if (this._Exemplaire.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidExemplaireChanging(value);
				this.SendPropertyChanging();
				this._idExemplaire = value;
				this.SendPropertyChanged("idExemplaire");
				this.OnidExemplaireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateReservation", DbType="Date NOT NULL")]
	public System.DateTime dateReservation
	{
		get
		{
			return this._dateReservation;
		}
		set
		{
			if ((this._dateReservation != value))
			{
				this.OndateReservationChanging(value);
				this.SendPropertyChanging();
				this._dateReservation = value;
				this.SendPropertyChanged("dateReservation");
				this.OndateReservationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exemplaire_Reservation", Storage="_Exemplaire", ThisKey="idExemplaire", OtherKey="idExemplaire", IsForeignKey=true)]
	public Exemplaire Exemplaire
	{
		get
		{
			return this._Exemplaire.Entity;
		}
		set
		{
			Exemplaire previousValue = this._Exemplaire.Entity;
			if (((previousValue != value) 
						|| (this._Exemplaire.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Exemplaire.Entity = null;
					previousValue.Reservation.Remove(this);
				}
				this._Exemplaire.Entity = value;
				if ((value != null))
				{
					value.Reservation.Add(this);
					this._idExemplaire = value.idExemplaire;
				}
				else
				{
					this._idExemplaire = default(int);
				}
				this.SendPropertyChanged("Exemplaire");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Reservation", Storage="_Usager", ThisKey="idUsager", OtherKey="idUsager", IsForeignKey=true)]
	public Usager Usager
	{
		get
		{
			return this._Usager.Entity;
		}
		set
		{
			Usager previousValue = this._Usager.Entity;
			if (((previousValue != value) 
						|| (this._Usager.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Usager.Entity = null;
					previousValue.Reservation.Remove(this);
				}
				this._Usager.Entity = value;
				if ((value != null))
				{
					value.Reservation.Add(this);
					this._idUsager = value.idUsager;
				}
				else
				{
					this._idUsager = default(int);
				}
				this.SendPropertyChanged("Usager");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarif")]
public partial class Tarif : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idTarif;
	
	private string _type;
	
	private double _tarif1;
	
	private EntitySet<Abonnement> _Abonnement;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTarifChanging(int value);
    partial void OnidTarifChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Ontarif1Changing(double value);
    partial void Ontarif1Changed();
    #endregion
	
	public Tarif()
	{
		this._Abonnement = new EntitySet<Abonnement>(new Action<Abonnement>(this.attach_Abonnement), new Action<Abonnement>(this.detach_Abonnement));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTarif", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idTarif
	{
		get
		{
			return this._idTarif;
		}
		set
		{
			if ((this._idTarif != value))
			{
				this.OnidTarifChanging(value);
				this.SendPropertyChanging();
				this._idTarif = value;
				this.SendPropertyChanged("idTarif");
				this.OnidTarifChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tarif", Storage="_tarif1", DbType="Float NOT NULL")]
	public double tarif1
	{
		get
		{
			return this._tarif1;
		}
		set
		{
			if ((this._tarif1 != value))
			{
				this.Ontarif1Changing(value);
				this.SendPropertyChanging();
				this._tarif1 = value;
				this.SendPropertyChanged("tarif1");
				this.Ontarif1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Abonnement", Storage="_Abonnement", ThisKey="idTarif", OtherKey="idTarif")]
	public EntitySet<Abonnement> Abonnement
	{
		get
		{
			return this._Abonnement;
		}
		set
		{
			this._Abonnement.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Abonnement(Abonnement entity)
	{
		this.SendPropertyChanging();
		entity.Tarif = this;
	}
	
	private void detach_Abonnement(Abonnement entity)
	{
		this.SendPropertyChanging();
		entity.Tarif = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usager")]
public partial class Usager : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idUsager;
	
	private string _nom;
	
	private string _prenom;
	
	private System.Nullable<System.DateTime> _dateNaissance;
	
	private string _mail;
	
	private string _motDePasse;
	
	private int _statut;
	
	private EntitySet<Abonnement> _Abonnement;
	
	private EntitySet<Emprunt> _Emprunt;
	
	private EntitySet<Reservation> _Reservation;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsagerChanging(int value);
    partial void OnidUsagerChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OndateNaissanceChanging(System.Nullable<System.DateTime> value);
    partial void OndateNaissanceChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OnmotDePasseChanging(string value);
    partial void OnmotDePasseChanged();
    partial void OnstatutChanging(int value);
    partial void OnstatutChanged();
    #endregion
	
	public Usager()
	{
		this._Abonnement = new EntitySet<Abonnement>(new Action<Abonnement>(this.attach_Abonnement), new Action<Abonnement>(this.detach_Abonnement));
		this._Emprunt = new EntitySet<Emprunt>(new Action<Emprunt>(this.attach_Emprunt), new Action<Emprunt>(this.detach_Emprunt));
		this._Reservation = new EntitySet<Reservation>(new Action<Reservation>(this.attach_Reservation), new Action<Reservation>(this.detach_Reservation));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsager", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idUsager
	{
		get
		{
			return this._idUsager;
		}
		set
		{
			if ((this._idUsager != value))
			{
				this.OnidUsagerChanging(value);
				this.SendPropertyChanging();
				this._idUsager = value;
				this.SendPropertyChanged("idUsager");
				this.OnidUsagerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string nom
	{
		get
		{
			return this._nom;
		}
		set
		{
			if ((this._nom != value))
			{
				this.OnnomChanging(value);
				this.SendPropertyChanging();
				this._nom = value;
				this.SendPropertyChanged("nom");
				this.OnnomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string prenom
	{
		get
		{
			return this._prenom;
		}
		set
		{
			if ((this._prenom != value))
			{
				this.OnprenomChanging(value);
				this.SendPropertyChanging();
				this._prenom = value;
				this.SendPropertyChanged("prenom");
				this.OnprenomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaissance", DbType="DateTime")]
	public System.Nullable<System.DateTime> dateNaissance
	{
		get
		{
			return this._dateNaissance;
		}
		set
		{
			if ((this._dateNaissance != value))
			{
				this.OndateNaissanceChanging(value);
				this.SendPropertyChanging();
				this._dateNaissance = value;
				this.SendPropertyChanged("dateNaissance");
				this.OndateNaissanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string mail
	{
		get
		{
			return this._mail;
		}
		set
		{
			if ((this._mail != value))
			{
				this.OnmailChanging(value);
				this.SendPropertyChanging();
				this._mail = value;
				this.SendPropertyChanged("mail");
				this.OnmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motDePasse", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string motDePasse
	{
		get
		{
			return this._motDePasse;
		}
		set
		{
			if ((this._motDePasse != value))
			{
				this.OnmotDePasseChanging(value);
				this.SendPropertyChanging();
				this._motDePasse = value;
				this.SendPropertyChanged("motDePasse");
				this.OnmotDePasseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statut", DbType="Int NOT NULL")]
	public int statut
	{
		get
		{
			return this._statut;
		}
		set
		{
			if ((this._statut != value))
			{
				this.OnstatutChanging(value);
				this.SendPropertyChanging();
				this._statut = value;
				this.SendPropertyChanged("statut");
				this.OnstatutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Abonnement", Storage="_Abonnement", ThisKey="idUsager", OtherKey="idUsager")]
	public EntitySet<Abonnement> Abonnement
	{
		get
		{
			return this._Abonnement;
		}
		set
		{
			this._Abonnement.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Emprunt", Storage="_Emprunt", ThisKey="idUsager", OtherKey="idUsager")]
	public EntitySet<Emprunt> Emprunt
	{
		get
		{
			return this._Emprunt;
		}
		set
		{
			this._Emprunt.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usager_Reservation", Storage="_Reservation", ThisKey="idUsager", OtherKey="idUsager")]
	public EntitySet<Reservation> Reservation
	{
		get
		{
			return this._Reservation;
		}
		set
		{
			this._Reservation.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Abonnement(Abonnement entity)
	{
		this.SendPropertyChanging();
		entity.Usager = this;
	}
	
	private void detach_Abonnement(Abonnement entity)
	{
		this.SendPropertyChanging();
		entity.Usager = null;
	}
	
	private void attach_Emprunt(Emprunt entity)
	{
		this.SendPropertyChanging();
		entity.Usager = this;
	}
	
	private void detach_Emprunt(Emprunt entity)
	{
		this.SendPropertyChanging();
		entity.Usager = null;
	}
	
	private void attach_Reservation(Reservation entity)
	{
		this.SendPropertyChanging();
		entity.Usager = this;
	}
	
	private void detach_Reservation(Reservation entity)
	{
		this.SendPropertyChanging();
		entity.Usager = null;
	}
}
#pragma warning restore 1591
